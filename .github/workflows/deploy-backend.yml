name: Deploy Backend

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - 'libs/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      packages: write

    env:
      IMAGE_NAME: criterium-edu-backend
      REGISTRY: ghcr.io

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: backend.Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }},${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            NODE_ENV=production
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}

      - name: Copy compose.yml files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "compose.yml,.env.example"
          target: "~/criterium-edu"

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ vars.SSH_HOST }}
          port: ${{ vars.SSH_PORT }}
          username: ${{ vars.SSH_USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/criterium-edu

            # Log in to GitHub Container Registry
            echo ${{ secrets.CONTAINER_REGISTRY_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            # Pull the latest images
            docker compose pull
            
            # Deploy with docker-compose
            docker compose up -d
            
            # Clean up old images
            docker system prune -af
