name: Deploy Backend

on:
  push:
    branches: [ master ]
    paths:
      - 'apps/api/**'
      - 'libs/**'
      - 'nx.json'
      - 'package.json'
      - 'tsconfig*.json'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      packages: write

    env:
      IMAGE_NAME: criterium-backend
      REGISTRY: ghcr.io

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Set up Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: "Clean install dependencies"
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Log in to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build and push Backend Docker image"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: backend.Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}

      - name: "Copy deployment files to server"
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml,start.sh,apps/api/.env.production"
          target: "~/criterium/"

      - name: "Deploy to server"
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p /var/www/criterium/apps/api
            sudo chown -R ${{ secrets.SSH_USER }}:${{ secrets.SSH_USER }} /var/www/criterium

            cp -f ~/criterium/docker-compose.yml /var/www/criterium/docker-compose.yml
            cp -f ~/criterium/start.sh /var/www/criterium/
            cp -f ~/criterium/apps/api/.env.production /var/www/criterium/apps/api/
            
            cd /var/www/criterium
            
            mkdir -p ./data/pg
            chmod -R 777 ./data
            chmod +x start.sh
            
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            docker compose pull backend
            docker compose up -d backend postgres
            docker system prune -af
